"use strict";export default class BigBrother{constructor(e){this._signals={},this._removed={},this.data=e,this.el=document.getElementById(this.data.id)||document.body,watchData(this,this.data.watchers),parseDOM(this,this.data)}watch(e,t){this._signals[e]||(this._signals[e]=[]),this._signals[e].push(t)}notify(e){!this._signals[e]||this._signals[e].length<1||this._signals[e].forEach(e=>e.call())}}function watchData(e,t,o){for(const s in t)if(t.hasOwnProperty(s)){let n=t[s];const r=void 0===o?s:`${o}.${s}`;n instanceof Object&&void 0===o&&watchData(e,n,r),Object.defineProperty(t,s,{get:()=>n,set(t){n=t,e.notify(r)}})}}function observeNodeAttr(e,t,o,s,n){const r=e.el.querySelectorAll(`[${t}]`);for(const a of r){let r=a.attributes[t].value,i=r.split(".");if(a.removeAttribute(t),1===i.length){n(e,s,r,a,o,r);continue}let c=i.shift(),d={...s};for(const e of i)d=d[c],c=e;n(e,d,c,a,o,r)}}function interpolateForNode(e,t,o,s){const n=s.parentNode,r=t[o],a=/\$\{key\}/g,i=/\$\{value\}/g;for(const e in r){let t=r[e],o=s.cloneNode(!0);for(let n of s.attributes){const s=n.nodeName,r=n.nodeValue.replace(a,e).replace(i,t);o.attributes[s].nodeValue=r}n.insertBefore(o,s),o.removeAttribute("interpolate-for")}n.removeChild(s)}function viewIfNode(e,t,o,s,n,r){checkToRemoveNode(e,t,o,s),e.watch(r,()=>checkToRemoveNode(e,t,o,s))}function checkToRemoveNode(e,t,o,s){if(t[o]){const t=e._removed[s];if(void 0===t)return;const o=t.parent,n=o.childNodes[t.index];o.insertBefore(s,n)}else{const t=s.parentNode,o=Array.from(t.children).indexOf(s);e._removed[s]={index:o,parent:t},t.removeChild(s)}}function watchNode(e,t,o,s,n,r){s[n]=t[o],e.watch(r,()=>s[n]=t[o])}function listenToNode(e,t,o,s,n){s.addEventListener(n,e=>{listenToEvent(t,o,e)},!0)}function listenToEvent(e,t,o){void 0===e.listeners[t]?e.watchers[t]=o.target.value:e.listeners[t].call(e,o)}function parseDOM(e,t){observeNodeAttr(e,"interpolate-for",null,t.watchers,interpolateForNode),observeNodeAttr(e,"view-if",null,t.watchers,viewIfNode),observeNodeAttr(e,"watch-text","textContent",t.watchers,watchNode),observeNodeAttr(e,"watch-text","innerText",t.watchers,watchNode),observeNodeAttr(e,"watch-value","value",t.watchers,watchNode),observeNodeAttr(e,"watch-html","innerHTML",t.watchers,watchNode),observeNodeAttr(e,"watch-class","className",t.watchers,watchNode),observeNodeAttr(e,"watch-id","id",t.watchers,watchNode),observeNodeAttr(e,"watch-name","name",t.watchers,watchNode),observeNodeAttr(e,"listen-input","input",t,listenToNode),observeNodeAttr(e,"listen-click","click",t,listenToNode),observeNodeAttr(e,"listen-change","change",t,listenToNode)}